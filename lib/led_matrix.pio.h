// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---------- //
// led_matrix //
// ---------- //

#define led_matrix_wrap_target 0
#define led_matrix_wrap 3
#define led_matrix_pio_version 0

#define led_matrix_T1 3
#define led_matrix_T2 3
#define led_matrix_T3 4

static const uint16_t led_matrix_program_instructions[] = {
            //     .wrap_target
    0x6321, //  0: out    x, 1            side 0 [3] 
    0x1223, //  1: jmp    !x, 3           side 1 [2] 
    0x1200, //  2: jmp    0               side 1 [2] 
    0xa242, //  3: nop                    side 0 [2] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program led_matrix_program = {
    .instructions = led_matrix_program_instructions,
    .length = 4,
    .origin = -1,
    .pio_version = led_matrix_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config led_matrix_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + led_matrix_wrap_target, offset + led_matrix_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}

#include "hardware/clocks.h"
static inline void led_matrix_program_init(PIO pio, uint state_machine, uint memory_offset, uint pin)
{
    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, state_machine, pin, 1, true);
    pio_sm_config c = led_matrix_program_get_default_config(memory_offset);
    sm_config_set_sideset_pins(&c, pin);
    sm_config_set_out_shift(&c, false, true, 24);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
    int cycles_per_bit = led_matrix_T1 + led_matrix_T2 + led_matrix_T3;
    float div = clock_get_hz(clk_sys) / (800000 * cycles_per_bit);
    sm_config_set_clkdiv(&c, div);
    pio_sm_init(pio, state_machine, memory_offset, &c);
    pio_sm_set_enabled(pio, state_machine, true);
}

#endif

